#!/usr/bin/env python3
import sys
import subprocess
from time import sleep

senderAction = sys.argv[1]
serverIP = sys.argv[2]
senderDataNStr = sys.argv[3]

senderPath = r'zabbix_sender'
# senderPath = r'/usr/local/bin/zabbix_sender'   # if zabbix sender isn't in PATH
timeout = 60  # how long the script must wait between LLD and sending, increase if data received late

if senderAction == 'send':
    sleep(timeout)  # wait for LLD to be processed by server
    senderProc = subprocess.Popen([senderPath, '-z', serverIP, '-i', '-'], stdin=subprocess.PIPE,
                                  universal_newlines=True)  # send data gathered from second argument to zabbix server
elif senderAction == 'send_verbose':
    print('\n  Data sent to zabbix sender:\n' + senderDataNStr)
    sys.stdout.flush()  # print before proc results
    senderProc = subprocess.Popen([senderPath, '-vv', '-z', serverIP, '-i', '-'], stdin=subprocess.PIPE,
                                  universal_newlines=True)  # verbose sender output
    print('\n  Note: the sender will fail if server did not discover / gather LLD previously.')
else:
    print(sys.argv[0] + ": Not supported. Use 'send' or 'send_verbose'.")
    sys.exit(1)

senderProc.communicate(input=senderDataNStr)
